//using 1d DP as only the steps are changing we see here that 
//either he will take 1 step or 2 so the last two will contribute to the current steps.
class Solution {
    public int climbStairs(int n) {
        int dp[] = new int[n+1];
        dp[0]=1;dp[1]=1;
        for(int i = 2;i<n+1;i++){
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[n];
    }
}
